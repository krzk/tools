---
- name: Include vars
  include_vars:
    file: ~/etc/ansible/vars/buildbot-upload.yml

- name: Check requirements for variables
  assert:
    that: '{{ item }} is defined'
  with_items:
    - mail_foward_to
    - ssh_allow_group
    - user_buildbot_master_ssh
    - user_buildbot_upload

- name: Create unprivileged user
  user:
    name: '{{ user_buildbot_upload }}'
    shell: /usr/sbin/nologin
    home: '/home/{{ user_buildbot_upload }}'
    state: present
    create_home: yes
    password_lock: yes
    force: no
    generate_ssh_key: no
    # see: sshd
    append: yes
    groups: '{{ ssh_allow_group }}'
  become: yes
  become_user: root

- name: Configure SSH for uploads
  blockinfile:
    path: '/etc/ssh/sshd_config'
    state: present
    block: |
      Match User {{ user_buildbot_upload }}
        ChrootDirectory /home/{{ user_buildbot_upload }}
        ForceCommand internal-sftp
        PermitTunnel no
        AllowAgentForwarding no
        AllowTcpForwarding no
        X11Forwarding no
    validate: /usr/sbin/sshd -T -f %s
  become: yes
  become_user: root
  register: sshd_config

- name: SSH reload
  systemd:
    name: ssh.service
    state: reloaded
  become: yes
  become_user: root
  when: sshd_config.changed | default(False)

- name: Add to authorized keys - current key
  ansible.posix.authorized_key:
    user: '{{ user_buildbot_upload }}'
    state: present
    key: "{{ lookup('file', '{{ item }}') }}"
  with_fileglob:
    - "{{ lookup('env','HOME') + '/.ssh/id_rsa.pub' }}"
    - "{{ lookup('env','HOME') + '/.ssh/id_ed25519.pub' }}"
  become: yes
  become_user: root

- name: Create upload dirs
  file:
    path: '{{ item }}'
    state: directory
    mode: '0775'
    owner: '{{ user_buildbot_master_ssh }}'
    group: '{{ user_buildbot_upload }}'
  with_items:
    - '/home/{{ user_buildbot_upload }}/deploy-pub'
    - '/home/{{ user_buildbot_upload }}/deploy-bin'
  become: yes
  become_user: root

- name: Link pub upload to nginx
  file:
    src: '/home/{{ user_buildbot_upload }}/deploy-pub'
    dest: '/usr/share/nginx/html/pub/deploy-pub'
    owner: '{{ user_buildbot_master_ssh }}'
    group: '{{ user_buildbot_upload }}'
    state: link
  become: yes
  become_user: root

- name: Update permissions of files
  command: "find {{ item }} -type f -exec chmod a+r '{}' \\;"
  with_items:
    - '/home/{{ user_buildbot_upload }}/deploy-pub'
    - '/home/{{ user_buildbot_upload }}/deploy-bin'
  become: yes
  become_user: root

- name: Set up cron - cleanup files
  ansible.builtin.cron:
    name: 'cleanup files - {{ item }}'
    minute: '5'
    hour: '1'
    job: 'find {{ item }} -mindepth 1 -mtime +14 -type f -print -delete'
  with_items:
    - '/home/{{ user_buildbot_upload }}/deploy-pub'
    - '/home/{{ user_buildbot_upload }}/deploy-bin'
  become: yes
  become_user: '{{ user_buildbot_master_ssh }}'

- name: Set up cron - cleanup dirs
  ansible.builtin.cron:
    name: 'cleanup dirs - {{ item }}'
    minute: '10'
    hour: '1'
    job: 'find {{ item }} -mindepth 1 -mtime +14 -type d -empty -print -delete'
  with_items:
    - '/home/{{ user_buildbot_upload }}/deploy-pub'
    - '/home/{{ user_buildbot_upload }}/deploy-bin'
  become: yes
  become_user: '{{ user_buildbot_master_ssh }}'

- name: Set up forward
  ansible.builtin.copy:
    content: |
      {{ mail_foward_to }}
    dest: '/home/{{ user_buildbot_upload }}/.forward'
  become: yes
  become_user: '{{ user_buildbot_upload }}'

- name: Link uploads within Buildbot
  ansible.builtin.file:
    src: '/home/{{ user_buildbot_upload }}/{{ item }}'
    dest: '/home/{{ user_buildbot_master_ssh }}/master/{{ item }}'
    state: link
  with_items:
    - deploy-pub
    - deploy-bin
  become: yes
  become_user: '{{ user_buildbot_master_ssh }}'

- name: Allow Buildbot user to manage also uploads
  user:
    name: '{{ user_buildbot_master_ssh }}'
    groups: '{{ user_buildbot_upload }}'
    append: yes
  become: yes
  become_user: root

- name: Set chmod on user's home directory
  file:
    path: '/home/{{ user_buildbot_upload }}'
    mode: '0751'
    # Necessary for SFTP chroot (plus og-w)
    owner: root
    group: root
  become: yes
  become_user: root
