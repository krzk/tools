# SPDX-License-Identifier: GPL-2.0
#
# Copyright (c) 2019-2025 Krzysztof Kozlowski
# Author: Krzysztof Kozlowski <k.kozlowski.k@gmail.com>
#                             <krzk@kernel.org>
---
- name: Check requirements for variables
  debug:
  when: lookup('vars', item) is undefined
  loop:
    - ssh_allow_group

- name: Add group for SSH logins
  group:
    name: '{{ ssh_allow_group }}'
    state: present
  become: yes
  become_user: root

- name: Add current user to group SSH logins
  user:
    name: '{{ ansible_user_id }}'
    append: yes
    force: no
    generate_ssh_key: no
    groups: '{{ ssh_allow_group }}'
    state: present
  become: yes
  become_user: root

- name: Allow group SSH logins
  lineinfile:
    path: '/etc/ssh/sshd_config'
    state: present
    insertafter: EOF
    line: '{{ item }}'
    validate: /usr/sbin/sshd -T -f %s
  with_items:
    - 'AllowGroups {{ ssh_allow_group }}'
  become: yes
  become_user: root

- name: Configure SSH
  lineinfile:
    path: '/etc/ssh/sshd_config'
    state: present
    insertafter: EOF
    regexp: '{{ item.regexp }}'
    line: '{{ item.line }}'
    validate: /usr/sbin/sshd -T -f %s
  with_items:
    - { regexp: '^PermitRootLogin ', line: 'PermitRootLogin no' }
    - { regexp: '^PasswordAuthentication ', line: 'PasswordAuthentication no' }
    - { regexp: '^KbdInteractiveAuthentication ', line: 'KbdInteractiveAuthentication no' }
    - { regexp: '^ClientAliveCountMax ', line: 'ClientAliveCountMax 3' }
    - { regexp: '^ClientAliveInterval ', line: 'ClientAliveInterval 30' }
  become: yes
  become_user: root
  # TODO: reload ssh

- name: Check if only one AllowGroups is set in SSH
  shell: test $(grep AllowGroups /etc/ssh/sshd_config | wc -l) -eq 1
  check_mode: no
  changed_when: no

- name: Check if old AllowUsers is not set in SSH
  shell: test $(grep AllowUsers /etc/ssh/sshd_config | wc -l) -eq 0
  check_mode: no
  changed_when: no
